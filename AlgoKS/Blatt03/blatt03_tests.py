import pathlib
from fractions import Fraction
import numpy as np
import testsuite as ts


def disable_np_linalg():
    import numpy as np

    np.linalg = ts.ForbiddenMember("np.linalg")


sheet = ts.Sheet(
    3,
    tasks=[
        ts.Task(
            1,
            "lu",
            description="LR-Zerlegung",
            allowed_imports={"numpy"},
            monkeypatches=(disable_np_linalg,),
            subtasks=[
                ts.Subtask(
                    "a",
                    marks=Fraction(1),
                    function_name="swap_rows",
                    description="Zeilen vertauschen",
                    test_cases=[
                        ts.TestCase((np.array([[42.0]]), 0, 0), np.array([[42.0]])),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0]]), 0, 0),
                            np.array([[1.0, 1.0], [2.0, 2.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0]]), 0, 1),
                            np.array([[2.0, 2.0], [1.0, 1.0]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [-1.0, 1.0, -1.0, 4.0, -1.0],
                                        [1.0, -1.0, 3.0, -1.0, 1.0],
                                        [-1.0, 2.0, -1.0, 1.0, -1.0],
                                        [1.0, -1.0, 1.0, -1.0, 1.0],
                                    ]
                                ),
                                2,
                                3,
                            ),
                            np.array(
                                [
                                    [1.0, -1.0, 1.0, -1.0, 5.0],
                                    [-1.0, 1.0, -1.0, 4.0, -1.0],
                                    [-1.0, 2.0, -1.0, 1.0, -1.0],
                                    [1.0, -1.0, 3.0, -1.0, 1.0],
                                    [1.0, -1.0, 1.0, -1.0, 1.0],
                                ]
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[1.0, 1.0, 1.0], [2.0, 2.0, 2.0], [3.0, 3.0, 3.0]]
                                ),
                                0,
                                2,
                            ),
                            np.array(
                                [[3.0, 3.0, 3.0], [2.0, 2.0, 2.0], [1.0, 1.0, 1.0]]
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "b",
                    marks=Fraction(1),
                    function_name="subtract_scaled",
                    description="Zeilen subtrahieren",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0], [1.0]]), 1, 0, 1.0),
                            np.array([[1.0], [0.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0], [1.0]]), 0, 1, 1.0),
                            np.array([[0.0], [1.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0]]), 1, 0, 0.0),
                            np.array([[1.0, 1.0], [2.0, 2.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0]]), 1, 0, 2.0),
                            np.array([[1.0, 1.0], [0.0, 0.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0]]), 1, 1, 1.0),
                            np.array([[1.0, 1.0], [0.0, 0.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [2.0, 2.0], [3.0, 3.0]]), 2, 1, 1.0),
                            np.array([[1.0, 1.0], [2.0, 2.0], [1.0, 1.0]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [-1.0, 1.0, -1.0, 4.0, -1.0],
                                        [1.0, -1.0, 3.0, -1.0, 1.0],
                                        [-1.0, 2.0, -1.0, 1.0, -1.0],
                                        [1.0, -1.0, 1.0, -1.0, 1.0],
                                    ]
                                ),
                                0,
                                4,
                                2.0,
                            ),
                            np.array(
                                [
                                    [-1.0, 1.0, -1.0, 1.0, 3.0],
                                    [-1.0, 1.0, -1.0, 4.0, -1.0],
                                    [1.0, -1.0, 3.0, -1.0, 1.0],
                                    [-1.0, 2.0, -1.0, 1.0, -1.0],
                                    [1.0, -1.0, 1.0, -1.0, 1.0],
                                ]
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "c",
                    marks=Fraction(1),
                    function_name="pivot_index",
                    description="Pivot-Element finden",
                    test_cases=[
                        ts.TestCase((np.array([[42.0]]), 0), 0),
                        ts.TestCase((np.array([[1.0, 2.0], [3.0, 4]]), 0), 1),
                        ts.TestCase((np.array([[1.0, 2.0], [3.0, 4]]), 1), 1),
                        ts.TestCase((np.array([[3.0, 4.0], [1.0, 2]]), 0), 0),
                        ts.TestCase(
                            (
                                np.array(
                                    [[3.0, 9.0, 9.0], [2.0, 2.0, 9.0], [1.0, 1.0, 1.0]]
                                ),
                                0,
                            ),
                            0,
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[3.0, 9.0, 9.0], [2.0, 2.0, 9.0], [1.0, 1.0, 1.0]]
                                ),
                                1,
                            ),
                            1,
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[3.0, 9.0, 9.0], [2.0, 2.0, 9.0], [1.0, 1.0, 1.0]]
                                ),
                                2,
                            ),
                            2,
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [-3.0, 9.0, 9.0],
                                        [-2.0, 2.0, 9.0],
                                        [-1.0, 1.0, 1.0],
                                    ]
                                ),
                                0,
                            ),
                            0,
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [-1.0, 1.0, -1.0, 4.0, -1.0],
                                        [1.0, -1.0, 3.0, -1.0, 1.0],
                                        [-1.0, 2.0, -1.0, 1.0, -1.0],
                                        [1.0, -1.0, 1.0, -1.0, 1.0],
                                    ]
                                ),
                                1,
                            ),
                            3,
                        ),
                    ],
                ),
                ts.Subtask(
                    "d",
                    marks=Fraction(4),
                    function_name="lu_decompose",
                    description="LR-Zerlegung",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[42.0]]),),
                            (np.array([[1.0]]), np.array([[1.0]]), np.array([[42.0]])),
                        ),
                        ts.TestCase(
                            (np.array([[1.0, 1.0], [1.0, 2.0]]),),
                            (
                                np.array([[1.0, 0.0], [0.0, 1.0]]),
                                np.array([[1.0, 0.0], [1.0, 1.0]]),
                                np.array([[1.0, 1.0], [0.0, 1.0]]),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[1.0, 3.0, 5.0], [2.0, 4.0, 7.0], [1.0, 1.0, 0.0]]
                                ),
                            ),
                            (
                                np.array(
                                    [[0.0, 1.0, 0.0], [1.0, 0.0, 0.0], [0.0, 0.0, 1.0]]
                                ),
                                np.array(
                                    [[1.0, 0.0, 0.0], [0.5, 1.0, 0.0], [0.5, -1.0, 1.0]]
                                ),
                                np.array(
                                    [[2.0, 4.0, 7.0], [0.0, 1.0, 1.5], [0.0, 0.0, -2.0]]
                                ),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [2.0, 3.0, 5.0],
                                        [6.0, 10.0, 17.0],
                                        [8.0, 14.0, 28.0],
                                    ]
                                ),
                            ),
                            (
                                np.array(
                                    [[0.0, 0.0, 1.0], [0.0, 1.0, 0.0], [1.0, 0.0, 0.0]]
                                ),
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0],
                                        [0.75, 1.0, 0.0],
                                        [0.25, 1.0, 1.0],
                                    ]
                                ),
                                np.array(
                                    [
                                        [8.0, 14.0, 28.0],
                                        [0.0, -0.5, -4],
                                        [0.0, 0.0, 2.0],
                                    ]
                                ),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 0.0]]
                                ),
                            ),
                            (
                                np.array(
                                    [[0.0, 1.0, 0.0], [0.0, 0.0, 1.0], [1.0, 0.0, 0.0]]
                                ),
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0],
                                        [0.14285714, 1.0, 0.0],
                                        [0.57142857, 0.5, 1.0],
                                    ]
                                ),
                                np.array(
                                    [
                                        [7.0, 8.0, 0.0],
                                        [0.0, 0.85714286, 3.0],
                                        [0.0, 0.0, 4.5],
                                    ]
                                ),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [-1.0, 1.0, -1.0, 4.0, -1.0],
                                        [1.0, -1.0, 3.0, -1.0, 1.0],
                                        [-1.0, 2.0, -1.0, 1.0, -1.0],
                                        [1.0, -1.0, 1.0, -1.0, 1.0],
                                    ]
                                ),
                            ),
                            (
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [0.0, 0.0, 0.0, 1.0, 0.0],
                                        [0.0, 0.0, 1.0, 0.0, 0.0],
                                        [0.0, 1.0, 0.0, 0.0, 0.0],
                                        [0.0, 0.0, 0.0, 0.0, 1.0],
                                    ]
                                ),
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [-1.0, 1.0, 0.0, 0.0, 0.0],
                                        [1.0, 0.0, 1.0, 0.0, 0.0],
                                        [-1.0, 0.0, 0.0, 1.0, 0.0],
                                        [1.0, 0.0, 0.0, 0.0, 1.0],
                                    ]
                                ),
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [0.0, 1.0, 0.0, 0.0, 4.0],
                                        [0.0, 0.0, 2.0, 0.0, -4.0],
                                        [0.0, 0.0, 0.0, 3.0, 4.0],
                                        [0.0, 0.0, 0.0, 0.0, -4.0],
                                    ]
                                ),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [
                                            -0.65556169,
                                            0.34331728,
                                            0.98314055,
                                            -0.4550035,
                                            0.90004438,
                                        ],
                                        [
                                            0.95241326,
                                            0.84595768,
                                            0.47040399,
                                            -0.42291233,
                                            -0.96781142,
                                        ],
                                        [
                                            0.53676727,
                                            -0.40189718,
                                            0.74985821,
                                            -0.61704069,
                                            -0.83990612,
                                        ],
                                        [
                                            -0.0985994,
                                            -0.61068867,
                                            -0.67655703,
                                            -0.43533887,
                                            -0.16422088,
                                        ],
                                        [
                                            -0.32317589,
                                            0.48831627,
                                            -0.58981647,
                                            0.36695473,
                                            0.93373367,
                                        ],
                                    ]
                                ),
                            ),
                            (
                                np.array(
                                    [
                                        [0.0, 1.0, 0.0, 0.0, 0.0],
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [0.0, 0.0, 1.0, 0.0, 0.0],
                                        [0.0, 0.0, 0.0, 1.0, 0.0],
                                        [0.0, 0.0, 0.0, 0.0, 1.0],
                                    ]
                                ),
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [-0.68831642, 1.0, 0.0, 0.0, 0.0],
                                        [0.56358651, -0.94929113, 1.0, 0.0, 0.0],
                                        [
                                            -0.10352586,
                                            -0.56515558,
                                            0.06419338,
                                            1.0,
                                            0.0,
                                        ],
                                        [
                                            -0.33932317,
                                            0.83769025,
                                            -0.88385204,
                                            0.13508831,
                                            1.0,
                                        ],
                                    ]
                                ),
                                np.array(
                                    [
                                        [
                                            9.52413260e-01,
                                            8.45957680e-01,
                                            4.70403990e-01,
                                            -4.22912330e-01,
                                            -9.67811420e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            9.25603846e-01,
                                            1.30692734e00,
                                            -7.46101003e-01,
                                            2.33883884e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            1.72539940e00,
                                            -1.08696007e00,
                                            -7.24367586e-02,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            -1.38777878e-17,
                                            -8.31008732e-01,
                                            -1.27583646e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            1.87472694e-18,
                                            0.00000000e00,
                                            3.62622262e-01,
                                        ],
                                    ]
                                ),
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "e",
                    marks=Fraction(3, 2),
                    function_name="forward_substitute",
                    description="Vorwärtssubstitution",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0]]), np.array([[0.0]])), np.array([[0.0]])
                        ),
                        ts.TestCase(
                            (np.array([[42.0]]), np.array([[42.0]])), np.array([[1.0]])
                        ),
                        ts.TestCase(
                            (
                                np.array([[1.0, 0.0], [2.0, 1.0]]),
                                np.array([[1.0], [1.0]]),
                            ),
                            np.array([[1.0], [-1.0]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [-1.0, 1.0, 0.0, 0.0, 0.0],
                                        [1.0, 0.0, 1.0, 0.0, 0.0],
                                        [-1.0, 0.0, 0.0, 1.0, 0.0],
                                        [1.0, 0.0, 0.0, 0.0, 1.0],
                                    ]
                                ),
                                np.array([[3.0], [1.0], [4.0], [1.0], [5]]),
                            ),
                            np.array([[3.0], [4.0], [1.0], [4.0], [2]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, 0.0, 0.0, 0.0, 0.0],
                                        [-0.68831642, 1.0, 0.0, 0.0, 0.0],
                                        [0.56358651, -0.94929113, 1.0, 0.0, 0.0],
                                        [
                                            -0.10352586,
                                            -0.56515558,
                                            0.06419338,
                                            1.0,
                                            0.0,
                                        ],
                                        [
                                            -0.33932317,
                                            0.83769025,
                                            -0.88385204,
                                            0.13508831,
                                            1.0,
                                        ],
                                    ]
                                ),
                                np.array([[1.0], [1.0], [1.0], [1.0], [1.0]]),
                            ),
                            np.array(
                                [
                                    [1.0],
                                    [1.68831642],
                                    [2.03911729],
                                    [1.92678947],
                                    [1.46702821],
                                ]
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "f",
                    marks=Fraction(3, 2),
                    function_name="backward_substitute",
                    description="Rückwärtssubstitution",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0]]), np.array([[0.0]])), np.array([[0.0]])
                        ),
                        ts.TestCase(
                            (np.array([[42.0]]), np.array([[42.0]])), np.array([[1.0]])
                        ),
                        ts.TestCase(
                            (
                                np.array([[2.0, 1.0], [0.0, 1.0]]),
                                np.array([[1.0], [1.0]]),
                            ),
                            np.array([[0.0], [1.0]]),
                        ),
                        ts.TestCase(
                            (
                                np.array([[2.0, 1.0], [0.0, 2.0]]),
                                np.array([[1.0], [1.0]]),
                            ),
                            np.array([[0.25], [0.5]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, -1.0, 1.0, -1.0, 5.0],
                                        [0.0, 1.0, 0.0, 0.0, 4.0],
                                        [0.0, 0.0, 2.0, 0.0, -4.0],
                                        [0.0, 0.0, 0.0, 3.0, 4.0],
                                        [0.0, 0.0, 0.0, 0.0, -4.0],
                                    ]
                                ),
                                np.array([[3.0], [4.0], [1.0], [4.0], [2]]),
                            ),
                            np.array([[14.0], [6.0], [-0.5], [2.0], [-0.5]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [
                                            9.52413260e-01,
                                            8.45957680e-01,
                                            4.70403990e-01,
                                            -4.22912330e-01,
                                            -9.67811420e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            9.25603846e-01,
                                            1.30692734e00,
                                            -7.46101003e-01,
                                            2.33883884e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            1.72539940e00,
                                            -1.08696007e00,
                                            -7.24367586e-02,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            -1.38777878e-17,
                                            -8.31008732e-01,
                                            -1.27583646e-01,
                                        ],
                                        [
                                            0.00000000e00,
                                            0.00000000e00,
                                            1.87472694e-18,
                                            0.00000000e00,
                                            3.62622262e-01,
                                        ],
                                    ]
                                ),
                                np.array([[1.0], [1.0], [1.0], [1.0], [1.0]]),
                            ),
                            np.array(
                                [
                                    [3.70344629],
                                    [-0.46252673],
                                    [-0.32945686],
                                    [-1.62674129],
                                    [2.75769059],
                                ]
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "g",
                    marks=Fraction(2),
                    function_name="linsolve",
                    description="Gleichungssysteme lösen",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0]]), np.array([[0.0]])), (np.array([[0.0]]),)
                        ),
                        ts.TestCase(
                            (np.array([[42.0]]), np.array([[42.0]])),
                            (np.array([[1.0]]),),
                        ),
                        ts.TestCase(
                            (
                                np.array([[1.0]]),
                                np.array([[1.0]]),
                                np.array([[2.0]]),
                                np.array([[3.0]]),
                            ),
                            (np.array([[1.0]]), np.array([[2.0]]), np.array([[3.0]])),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, 1.0, 1.0, 1.0],
                                        [1.0, 2.0, 3.0, 4.0],
                                        [1.0, 3.0, 6.0, 10.0],
                                        [1.0, 4.0, 10.0, 20.0],
                                    ]
                                ),
                                np.array([[0.0], [0.0], [0.0], [0.0]]),
                                np.array([[3.0], [1.0], [4.0], [1.0]]),
                            ),
                            (
                                np.array([[0.0], [0.0], [0.0], [0.0]]),
                                np.array([[21.0], [-45.0], [38.0], [-11.0]]),
                            ),
                        ),
                    ],
                ),
            ],
        ),
        ts.Task(
            2,
            "qr",
            description="QR-Zerlegung",
            allowed_imports={"numpy"},
            monkeypatches=(disable_np_linalg,),
            subtasks=[
                ts.Subtask(
                    "a",
                    marks=Fraction(3),
                    function_name="givens_rotation",
                    description="Givens-Rotation",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0, 0.0], [1.0, 1.0]]), 0, 1),
                            np.array([[1.0, 0.0], [0.0, 1.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[0.0, 1.0], [1.0, 1.0]]), 1, 0),
                            np.array([[0.0, 1.0], [-1, 0.0]]),
                        ),
                        ts.TestCase(
                            (np.array([[3.0, 1.0], [4.0, 1.0]]), 1, 0),
                            np.array([[0.6, 0.8], [-0.8, 0.6]]),
                        ),
                        ts.TestCase(
                            (np.array([[3.0, 1.0], [4.0, 1.0], [1.0, 1.0]]), 1, 0),
                            np.array(
                                [[0.6, 0.8, 0.0], [-0.8, 0.6, 0.0], [0.0, 0.0, 1.0]]
                            ),
                        ),
                        ts.TestCase(
                            (np.array([[3.0, 1.0, 1.0], [4.0, 1.0, 1.0]]), 1, 0),
                            np.array([[0.6, 0.8], [-0.8, 0.6]]),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [[1.0, 1.0, 1.0], [0.0, -3.0, 3.0], [0.0, -4.0, 10]]
                                ),
                                2,
                                1,
                            ),
                            np.array(
                                [[1.0, 0.0, 0.0], [0.0, 0.6, 0.8], [0.0, -0.8, 0.6]]
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "b",
                    marks=Fraction(3),
                    function_name="qr_decompose",
                    description="QR-Zerlegung",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[42.0]]),),
                            (np.array([[1.0]]), np.array([[42.0]])),
                        ),
                        ts.TestCase(
                            (np.array([[3.0], [4.0]]),),
                            (
                                np.array([[0.6, -0.8], [0.8, 0.6]]),
                                np.array([[5.0], [0.0]]),
                            ),
                        ),
                        ts.TestCase(
                            (np.array([[3.0, 1.0], [4.0, 0.0]]),),
                            (
                                np.array([[0.6, -0.8], [0.8, 0.6]]),
                                np.array([[5.0, 0.6], [0.0, -0.8]]),
                            ),
                        ),
                        ts.TestCase(
                            (np.array([[3.0, 1.0], [4.0, 0.0]]),),
                            (
                                np.array([[0.6, -0.8], [0.8, 0.6]]),
                                np.array([[5.0, 0.6], [0.0, -0.8]]),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, 1.0, 1.0, 1.0],
                                        [1.0, 2.0, 3.0, 4.0],
                                        [1.0, 3.0, 6.0, 10.0],
                                        [1.0, 4.0, 10.0, 20.0],
                                    ]
                                ),
                            ),
                            (
                                np.array(
                                    [
                                        [0.5, -0.67082039, 0.5, -0.2236068],
                                        [0.5, -0.2236068, -0.5, 0.67082039],
                                        [0.5, 0.2236068, -0.5, -0.67082039],
                                        [0.5, 0.67082039, 0.5, 0.2236068],
                                    ]
                                ),
                                np.array(
                                    [
                                        [2.0, 5.0, 10.0, 17.5],
                                        [0.0, 2.23606798, 6.70820393, 14.0872283],
                                        [0.0, 0.0, 1.0, 3.5],
                                        [0.0, 0.0, 0.0, 0.223606798],
                                    ]
                                ),
                            ),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [9.0, 8.0, 0.0],
                                        [8.0, 7.0, 6],
                                        [5, 4.0, 3.0],
                                        [2.0, 1.0, 0.0],
                                    ]
                                ),
                            ),
                            (
                                np.array(
                                    [
                                        [
                                            6.82288239e-01,
                                            -2.90659179e-01,
                                            6.70820393e-01,
                                            0.0,
                                        ],
                                        [
                                            6.06478435e-01,
                                            -1.24568220e-01,
                                            -6.70820393e-01,
                                            4.08248290e-01,
                                        ],
                                        [
                                            3.79049022e-01,
                                            3.73704659e-01,
                                            -2.23606798e-01,
                                            -8.16496581e-01,
                                        ],
                                        [
                                            1.51619609e-01,
                                            8.71977538e-01,
                                            2.23606798e-01,
                                            4.08248290e-01,
                                        ],
                                    ]
                                ),
                                np.array(
                                    [
                                        [1.31909060e01, 1.13714707e01, 4.77601767e00],
                                        [0.0, -8.30454799e-01, 3.73704659e-01],
                                        [0.0, 0.0, -4.69574275e00],
                                        [0.0, 0.0, 0.0],
                                    ]
                                ),
                            ),
                        ),
                    ],
                ),
                ts.Subtask(
                    "d",
                    marks=Fraction(1),
                    function_name="linsolve",
                    description="Gleichungssysteme lösen",
                    test_cases=[
                        ts.TestCase(
                            (np.array([[1.0]]), np.array([[0.0]])), (np.array([[0.0]]),)
                        ),
                        ts.TestCase(
                            (np.array([[42.0]]), np.array([[42.0]])),
                            (np.array([[1.0]]),),
                        ),
                        ts.TestCase(
                            (
                                np.array([[1.0]]),
                                np.array([[1.0]]),
                                np.array([[2.0]]),
                                np.array([[3.0]]),
                            ),
                            (np.array([[1.0]]), np.array([[2.0]]), np.array([[3.0]])),
                        ),
                        ts.TestCase(
                            (
                                np.array(
                                    [
                                        [1.0, 1.0, 1.0, 1.0],
                                        [1.0, 2.0, 3.0, 4.0],
                                        [1.0, 3.0, 6.0, 10.0],
                                        [1.0, 4.0, 10.0, 20.0],
                                    ]
                                ),
                                np.array([[0.0], [0.0], [0.0], [0.0]]),
                                np.array([[3.0], [1.0], [4.0], [1.0]]),
                            ),
                            (
                                np.array([[0.0], [0.0], [0.0], [0.0]]),
                                np.array([[21.0], [-45.0], [38.0], [-11.0]]),
                            ),
                        ),
                    ],
                ),
            ],
        ),
    ],
)


def jupyter_run_tests(*tasknames: str):
    src_dir = pathlib.Path(__file__).parent
    ts.TestDriver(sheet, src_dir).run_jupyter(tasknames)


if __name__ == "__main__":
    src_dir = pathlib.Path.cwd()
    ts.TestDriver(sheet, src_dir).run_cli()
